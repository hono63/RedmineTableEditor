<% query_options = nil unless defined?(query_options) %>
<% query_options ||= {} %>
<%= form_tag({}, :data => {:cm_url => issues_context_menu_path}) do -%>
<%= hidden_field_tag 'back_url', url_for(:params => request.query_parameters), :id => nil %>
<%= query_columns_hidden_tags(query) %>
<h3>Hello Table Editor</h3>
<div class="autoscroll">
<table class="list issues odd-even <%= query.css_classes %>">
  <thead>
    <tr>
      <th class="checkbox hide-when-print">
        <%= check_box_tag 'check_all', '', false, :class => 'toggle-selection',
              :title => "#{l(:button_check_all)}/#{l(:button_uncheck_all)}" %>
      </th>
      <% query.inline_columns.each do |column| %>
        <%= column_header(query, column, query_options) %>
      <% end %>
      <th class="buttons"></th>
    </tr>
  </thead>
  <tbody>
  <% grouped_issue_list(issues, query) do |issue, level, group_name, group_count, group_totals| -%>
  <% if group_name %>
    <% reset_cycle %>
    <tr class="group open">
      <td colspan="<%= query.inline_columns.size + 2 %>">
        <span class="expander icon icon-expended" onclick="toggleRowGroup(this);">&nbsp;</span>
        <span class="name"><%= group_name %></span> <span class="badge badge-count count"><%= group_count %></span> <span class="totals"><%= group_totals %></span>
        <%= link_to_function("#{l(:button_collapse_all)}/#{l(:button_expand_all)}",
                             "toggleAllRowGroups(this)", :class => 'toggle-all') %>
      </td>
    </tr>
  <% end %>
  <tr id="issue-<%= issue.id %>" class="hascontextmenu <%= cycle('odd', 'even') %> <%= issue.css_classes %> <%= level > 0 ? "idnt idnt-#{level}" : nil %>">
    <td class="checkbox hide-when-print"><%= check_box_tag("ids[]", issue.id, false, :id => nil) %></td>
    <% query.inline_columns.each do |column| %>
    <%= content_tag('td', column_content(column, issue), :class => column.css_classes) %>
    <% end %>
    <td class="buttons"><%= link_to_context_menu %></td>
  </tr>
  <% query.block_columns.each do |column|
       if (text = column_content(column, issue)) && text.present? -%>
  <tr class="<%= current_cycle %>">
    <td colspan="<%= query.inline_columns.size + 2 %>" class="<%= column.css_classes %> block_column">
      <% if query.block_columns.count > 1 %>
        <span><%= column.caption %></span>
      <% end %>
      <%= text %>
    </td>
  </tr>
  <% end -%>
  <% end -%>
  <% end -%>
  </tbody>
</table>
<div id="issue-tabulator"></div>
</div>
<link href="https://unpkg.com/tabulator-tables@4.9.3/dist/css/tabulator.min.css" rel="stylesheet">
<script type="text/javascript" src="https://unpkg.com/tabulator-tables@4.9.3/dist/js/tabulator.min.js"></script>
<script type="text/javascript">
  // プロジェクト
  <% @projects = Project.all %>
  var projects_json = {
    <% @projects.each do |project| %>
      "<%= project.id %>": "<%= project.name %>",
    <% end %>
  };
  // トラッカー
  <% @trackers = Tracker.all %>
  var trackers_json = {
    <% @trackers.each do |tracker| %>
      "<%= tracker.id %>": "<%= tracker.name %>",
    <% end %>
  };
  // ステータス
  <% @statuses = IssueStatus.all %>
  var statuses_json = {
    <% @statuses.each do |status| %>
      "<%= status.id %>": "<%= status.name %>",
    <% end %>
  };
  // 優先度
  <% @prios = IssuePriority.all %>
  var prios_json = {
    <% @prios.each do |prio| %>
      "<%= prio.id %>": "<%= prio.name %>",
    <% end %>
  };
  // ユーザー
  <% @users = User.all %>
  var users_json = {
    <% @users.each do |user| %>
      "<%= user.id %>": "<%= user.name %>",
    <% end %>
  };
  // カテゴリ
  <% @categories = IssueCategory.all %>
  var categories_json = {
    <% @categories.each do |cate| %>
      "<%= cate.id %>": "<%= cate.name %>",
    <% end %>
  };
  // バージョン
  <% @fixed_versions = Version.all %>
  var fixed_versions_json = {
    <% @fixed_versions.each do |fixed_version| %>
      "<%= fixed_version.id %>": "<%= fixed_version.name %>",
    <% end %>
  };
  // タイトルデータ
  var cols = [
    <% query.inline_columns.each do |column| %>
  <%= case column.name 
when :id
  ("{title:'" + column.caption.to_s + "',field:'" + column.name.to_s + "',formatter:'link', formatterParams:{labelField:'id', urlPrefix:'/issues/'}}").html_safe
when :project then
  ("{title:'" + column.caption.to_s + "',field:'" + column.name.to_s + "',editor:'select', editorParams:{values:projects_json}, formatter:'lookup', formatterParams:projects_json}").html_safe
when :tracker then
  ("{title:'" + column.caption.to_s + "',field:'" + column.name.to_s + "',editor:'select', editorParams:{values:trackers_json}, formatter:'lookup', formatterParams:trackers_json}").html_safe
when :status then
  ("{title:'" + column.caption.to_s + "',field:'" + column.name.to_s + "',editor:'select', editorParams:{values:statuses_json}, formatter:'lookup', formatterParams:statuses_json}").html_safe
when :priority then
  ("{title:'" + column.caption.to_s + "',field:'" + column.name.to_s + "',editor:'select', editorParams:{values:prios_json}, formatter:'lookup', formatterParams:prios_json}").html_safe
when :category then
  ("{title:'" + column.caption.to_s + "',field:'" + column.name.to_s + "',editor:'select', editorParams:{values:categories_json}, formatter:'lookup', formatterParams:categories_json}").html_safe
when :fixed_version then
  ("{title:'" + column.caption.to_s + "',field:'" + column.name.to_s + "',editor:'select', editorParams:{values:fixed_versions_json}, formatter:'lookup', formatterParams:fixed_versions_json}").html_safe
when :assigned_to then
  ("{title:'" + column.caption.to_s + "',field:'" + column.name.to_s + "',editor:'select', editorParams:{values:users_json}, formatter:'lookup', formatterParams:users_json}").html_safe
when :author, :last_updated_by, :attachments, :parent then
  ("{title:'" + column.caption.to_s + "',field:'" + column.name.to_s + "',formatter:'html'}").html_safe
when :subject then
  {:title => column.caption.to_s, :field => column.name.to_s, :editor => 'input'}.to_json.html_safe
else
  ("{title:'" + column.caption.to_s + "',field:'" + column.name.to_s.gsub(".", "_") + "'}").html_safe
end %>,
    <% end %>
  ];
  // チケットデータ
  var issue_dat  = [
    <% grouped_issue_list(issues, query) do |issue, level, group_name, group_count, group_totals| -%>
        {
      <% query.inline_columns.each do |column| -%>
          <%= column.name.to_s.gsub('.', '_') %>: '<%= case column.name 
            when :project, :tracker, :status, :priority then
              column.value_object(issue).id
            when :category then
              issue.category_id
            when :fixed_version then
              issue.fixed_version_id
            when :assigned_to then
              issue.assigned_to_id
            when :attachments then
              value = column.value_object(issue)
              value.to_a.map {|a| format_object(a)}.join(" ").html_safe
            else
              format_object(column.value_object(issue)).html_safe 
            end %>',
      <% end -%>
        },
    <% end -%>
  ];
  var issue_tab = new Tabulator("#issue-tabulator", {
        height: 400,
        data: issue_dat,
        layout: "fitDataStretch",
        columns: cols,
  });
</script>
<% end -%>